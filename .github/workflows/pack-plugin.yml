name: PackPlugin
on:
    push:
        branches:
            - master
        tags:
            - '*'

env:
    PLUGIN_NAME: FroshPlatformHtmlMinify
    ACCOUNT_USER: ${{ secrets.ACCOUNT_USER }}
    ACCOUNT_PASSWORD: ${{ secrets.ACCOUNT_PASSWORD }}
    PLUGIN_UPLOADER_VERSION: 0.3.6

jobs:
    pack:
        runs-on: ubuntu-latest
        container: ghcr.io/friendsofshopware/platform-plugin-dev:v6.3.4
        steps:
            -   name: Get the version
                if: startsWith(github.ref, 'refs/tags/')
                id: get_version
                run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

            -   name: Checkout
                uses: actions/checkout@v2.3.1
                with:
                    path: ${{ env.PLUGIN_NAME }}

            -   name: getPluginUploader
                run: wget 'https://github.com/FriendsOfShopware/FroshPluginUploader/releases/download/${{ env.PLUGIN_UPLOADER_VERSION }}/frosh-plugin-upload.phar' -O frosh-plugin-upload.phar

            -   name: BuildZip
                run: |
                    php frosh-plugin-upload.phar ext:zip ${PLUGIN_NAME}
                    mv ${PLUGIN_NAME}*.zip ${PLUGIN_NAME}.zip

            -   name: Upload Artefact
                uses: actions/upload-artifact@v2
                with:
                    name: ${{ env.PLUGIN_NAME }}
                    path: ${{ env.PLUGIN_NAME }}.zip

            -   name: Validate Zip
                run: php frosh-plugin-upload.phar ext:validate $(pwd)/${PLUGIN_NAME}.zip

            -   name: Update store informations
                run: php frosh-plugin-upload.phar ext:update $(pwd)/${PLUGIN_NAME}/

            -   name: Upload to store
                if: startsWith(github.ref, 'refs/tags/')
                run: php frosh-plugin-upload.phar ext:upload $(pwd)/${PLUGIN_NAME}.zip

            -   name: Create and Upload Release to github
                if: startsWith(github.ref, 'refs/tags/')
                id: create_release
                uses: actions/create-release@v1.0.0
                    env:
                        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    with:
                        tag_name: ${{ steps.get_version.outputs.VERSION }}
                        release_name: ${{ steps.get_version.outputs.VERSION }}
                        draft: false
                        prerelease: false
